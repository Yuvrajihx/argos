/**
 * Get the top level of the git repository.
 */
declare function getGitRepositoryPath(): Promise<string | null>;
/**
 * Read the version from a package.json file.
 */
declare function readVersionFromPackage(pkgPath: string): Promise<string>;
type ScreenshotMetadata = {
    url?: string;
    viewport?: {
        width: number;
        height: number;
    };
    colorScheme?: "light" | "dark";
    mediaType?: "screen" | "print";
    test: {
        id?: string;
        title: string;
        titlePath: string[];
        retries?: number;
        retry?: number;
        location?: {
            file: string;
            line: number;
            column: number;
        };
    } | null;
    browser?: {
        name: string;
        version: string;
    };
    automationLibrary: {
        name: string;
        version: string;
    };
    sdk: {
        name: string;
        version: string;
    };
};
/**
 * Get metadata path from screenshot path.
 */
declare function getMetadataPath(screenshotPath: string): string;
/**
 * Write screenshot metadata to disk.
 */
declare function writeMetadata(screenshotPath: string, metadata: ScreenshotMetadata): Promise<void>;
/**
 * Read screenshot metadata from disk.
 * If not found, returns null.
 */
declare function readMetadata(screenshotPath: string): Promise<ScreenshotMetadata | null>;
/**
 * Build a screenshot name from a test name and options.
 */
declare function getScreenshotName(name: string, options?: {
    viewportWidth?: number;
}): string;
/**
 * Get playwright trace from screenshot path.
 * If not found, returns null.
 */
declare function getPlaywrightTracePath(screenshotPath: string): Promise<string | null>;
export { getGitRepositoryPath, readVersionFromPackage, ScreenshotMetadata, getMetadataPath, writeMetadata, readMetadata, getScreenshotName, getPlaywrightTracePath };
